{"version":3,"names":[],"mappings":"","sources":["ui.js"],"sourcesContent":["\"use strict\";\n\nvar device = {\n  agent: navigator.userAgent.toLocaleLowerCase(),\n  os: null,\n  ver: null,\n  init: function init() {\n    if (device.agent.indexOf('iphone') > -1 || device.agent.indexOf('ipad') > -1) {\n      var str = device.agent.substring(device.agent.indexOf('os') + 3);\n      var ver = str.substring(0, str.indexOf(' like'));\n      device.os = 'ios';\n      device.ver = device.os + ver;\n    }\n\n    if (device.agent.indexOf('android') > -1) {\n      var _str = device.agent.substring(device.agent.indexOf('android') + 8);\n\n      var strSub = _str.substring(0, _str.indexOf(';'));\n\n      var _ver = strSub.replace(/[.]/gi, '_');\n\n      device.os = 'android';\n      device.ver = device.os + _ver;\n    }\n\n    device.set();\n  },\n  set: function set() {\n    var html = document.querySelector('html');\n    var htmlClass = html.getAttribute('class');\n    var trash = '';\n    if (device.agent.indexOf('samsung') > -1) trash += ' samsung';\n    if (device.agent.indexOf('naver') > -1) trash += ' naver';\n    htmlClass ? html.setAttribute('class', htmlClass + ' ' + device.ver + trash) : html.setAttribute('class', device.ver + trash);\n  }\n};\nvar findEl = {\n  obj: null,\n  parent: function parent(el, str) {\n    var tag = el.parentNode.tagName.toLowerCase();\n    var cls = el.parentNode.classList;\n    var id = el.parentNode.getAttribute('id');\n    findEl.obj = el.parentNode;\n\n    if (str !== tag && !cls.contains(str) && str != id) {\n      if (tag != 'body') {\n        findEl.parent(findEl.obj, str);\n      } else {\n        findEl.obj = null;\n      }\n    }\n\n    return findEl.obj;\n  },\n  child: function child(el, str) {\n    var arr = [];\n    [].forEach.call(el.childNodes, function (obj) {\n      if (obj.nodeType == 1) {\n        var tag = obj.tagName.toLowerCase();\n        var cls = obj.classList;\n        var id = obj.getAttribute('id');\n\n        if (str === tag || cls.contains(str) || str === id) {\n          arr.push(obj);\n        }\n      }\n    });\n\n    if (arr.length > 0) {\n      return arr;\n    } else {\n      return null;\n    }\n  },\n  prevNode: function prevNode(str) {\n    if (str.previousSibling != null) {\n      if (str.previousSibling.nodeType == 1) {\n        findEl.obj = str.previousSibling;\n      } else {\n        findEl.prevNode(str.previousSibling);\n      }\n\n      return findEl.obj;\n    }\n  },\n  nextNode: function nextNode(str) {\n    if (str.nextSibling != null) {\n      if (str.nextSibling.nodeType == 1) {\n        findEl.obj = str.nextSibling;\n      } else {\n        findEl.nextNode(str.nextSibling);\n      }\n\n      return findEl.obj;\n    }\n  }\n};\n\nvar getUrlParams = function getUrlParams() {\n  var params = {};\n  window.location.search.replace(/[?&]+([^=&]+)=([^&]*)/gi, function (str, key, value) {\n    params[key] = value;\n  });\n  return params;\n};\n\nvar tab = {\n  obj: {},\n  init: function init() {\n    var tabs = document.querySelectorAll('.tab');\n    [].forEach.call(tabs, function (_this, idx) {\n      tab.obj['tab' + idx] = {};\n      var tabObj = tab.obj['tab' + idx];\n      tabObj['list'] = _this.querySelector('.tabList');\n      tabObj['menu'] = tabObj['list'].querySelectorAll('a');\n      tabObj['contents'] = findEl.child(_this, 'box');\n      tab.addEvent(tabObj['menu'], tabObj);\n    });\n  },\n  addEvent: function addEvent(menu, tabObj) {\n    [].forEach.call(menu, function (_this, idx) {\n      _this.addEventListener('click', function () {\n        event.preventDefault();\n        tab.active(tabObj, idx);\n      });\n    });\n  },\n  active: function active(obj, idx) {\n    [].forEach.call(obj.menu, function (_this) {\n      _this.parentNode.classList.remove('active');\n    });\n    obj.menu[idx].parentNode.classList.add('active');\n    [].forEach.call(obj.contents, function (_this) {\n      _this.classList.remove('active');\n    });\n    obj.contents[idx].classList.add('active');\n  }\n};\nvar layer = {\n  obj: {},\n  open: function open(id) {\n    var layerWrap = document.querySelector('#' + id);\n    var none = true;\n    layerWrap.classList.add('show');\n\n    for (var key in layer.obj) {\n      if (key == id) none = false;\n    }\n\n    if (none) {\n      layerWrap.addEventListener('click', function () {\n        if (event.target.classList.contains('layerPopup')) layer.close(id);\n      });\n    }\n\n    layer.obj[id] = layerWrap;\n    document.body.classList.add('scrollLock');\n  },\n  close: function close(id) {\n    var target;\n\n    if (id) {\n      target = document.querySelector('#' + id);\n    } else {\n      target = findEl.parent(event.target, 'layerPopup');\n    }\n\n    target.classList.remove('show');\n    document.body.classList.remove('scrollLock');\n  }\n};\nvar menu = {\n  open: function open() {\n    document.body.classList.add('menuShow');\n  },\n  close: function close() {\n    document.body.classList.remove('menuShow');\n  }\n};\nvar slideOpt = {\n  pageSlide: {\n    speed: 500,\n    loop: true,\n    observer: true,\n    observeParents: true,\n    navigation: {\n      prevEl: '#pageSlide .btnPrev',\n      nextEl: '#pageSlide .btnNext'\n    }\n  }\n};\nvar slider = {\n  obj: {},\n  active: function active(id) {\n    var sliderObj = '#' + id;\n    var option = slideOpt[id];\n    if (!option.on) option['on'] = {};\n\n    option.on['init'] = function () {\n      slider.obj[id] = this;\n    };\n\n    if (document.querySelector(sliderObj)) new Swiper(sliderObj, option);\n  }\n};\n$.datepicker.setDefaults({\n  dateFormat: 'yy-mm-dd',\n  prevText: '이전 달',\n  nextText: '다음 달',\n  monthNames: ['1월', '2월', '3월', '4월', '5월', '6월', '7월', '8월', '9월', '10월', '11월', '12월'],\n  monthNamesShort: ['1월', '2월', '3월', '4월', '5월', '6월', '7월', '8월', '9월', '10월', '11월', '12월'],\n  dayNames: ['일', '월', '화', '수', '목', '금', '토'],\n  dayNamesShort: ['일', '월', '화', '수', '목', '금', '토'],\n  dayNamesMin: ['일', '월', '화', '수', '목', '금', '토'],\n  showMonthAfterYear: true,\n  yearSuffix: '년'\n});\nwindow.addEventListener('DOMContentLoaded', function () {\n  device.init();\n  tab.init();\n  $(\".inputTxt.typeCal\").datepicker();\n});"],"file":"ui.js"}